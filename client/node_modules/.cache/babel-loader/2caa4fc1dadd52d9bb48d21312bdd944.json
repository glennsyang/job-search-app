{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'debounce'; // < 1kb payload overhead when lodash/debounce is > 3kb.\n\nvar styles = {\n  width: 99,\n  height: 99,\n  position: 'absolute',\n  top: -9999,\n  overflow: 'scroll',\n  // TODO Do we need this style for IE 11 support?\n  msOverflowStyle: 'scrollbar'\n};\n/**\n * @ignore - internal component.\n * The component is originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\n\nfunction ScrollbarSize(props) {\n  var onChange = props.onChange;\n  var scrollbarHeight = React.useRef();\n  var nodeRef = React.useRef(null);\n\n  var setMeasurements = function setMeasurements() {\n    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;\n  };\n\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      var prevHeight = scrollbarHeight.current;\n      setMeasurements();\n\n      if (prevHeight !== scrollbarHeight.current) {\n        onChange(scrollbarHeight.current);\n      }\n    }, 166); // Corresponds to 10 frames at 60 Hz.\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [onChange]);\n  React.useEffect(function () {\n    setMeasurements();\n    onChange(scrollbarHeight.current);\n  }, [onChange]);\n  return React.createElement(\"div\", {\n    style: styles,\n    ref: nodeRef\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;\nexport default ScrollbarSize;","map":{"version":3,"sources":["/Users/glennsheppard/Development/React/jobs/client/node_modules/@material-ui/core/esm/Tabs/ScrollbarSize.js"],"names":["React","PropTypes","debounce","styles","width","height","position","top","overflow","msOverflowStyle","ScrollbarSize","props","onChange","scrollbarHeight","useRef","nodeRef","setMeasurements","current","offsetHeight","clientHeight","useEffect","handleResize","prevHeight","window","addEventListener","clear","removeEventListener","createElement","style","ref","process","env","NODE_ENV","propTypes","func","isRequired"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAAiC;;AAEjC,IAAIC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,EADI;AAEXC,EAAAA,MAAM,EAAE,EAFG;AAGXC,EAAAA,QAAQ,EAAE,UAHC;AAIXC,EAAAA,GAAG,EAAE,CAAC,IAJK;AAKXC,EAAAA,QAAQ,EAAE,QALC;AAMX;AACAC,EAAAA,eAAe,EAAE;AAPN,CAAb;AASA;;;;;;AAMA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AACA,MAAIC,eAAe,GAAGb,KAAK,CAACc,MAAN,EAAtB;AACA,MAAIC,OAAO,GAAGf,KAAK,CAACc,MAAN,CAAa,IAAb,CAAd;;AAEA,MAAIE,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/CH,IAAAA,eAAe,CAACI,OAAhB,GAA0BF,OAAO,CAACE,OAAR,CAAgBC,YAAhB,GAA+BH,OAAO,CAACE,OAAR,CAAgBE,YAAzE;AACD,GAFD;;AAIAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAY;AAC1B,QAAIC,YAAY,GAAGnB,QAAQ,CAAC,YAAY;AACtC,UAAIoB,UAAU,GAAGT,eAAe,CAACI,OAAjC;AACAD,MAAAA,eAAe;;AAEf,UAAIM,UAAU,KAAKT,eAAe,CAACI,OAAnC,EAA4C;AAC1CL,QAAAA,QAAQ,CAACC,eAAe,CAACI,OAAjB,CAAR;AACD;AACF,KAP0B,EAOxB,GAPwB,CAA3B,CAD0B,CAQjB;;AAETM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACA,WAAO,YAAY;AACjBA,MAAAA,YAAY,CAACI,KAAb;AACAF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC;AACD,KAHD;AAID,GAfD,EAeG,CAACT,QAAD,CAfH;AAgBAZ,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAY;AAC1BJ,IAAAA,eAAe;AACfJ,IAAAA,QAAQ,CAACC,eAAe,CAACI,OAAjB,CAAR;AACD,GAHD,EAGG,CAACL,QAAD,CAHH;AAIA,SAAOZ,KAAK,CAAC2B,aAAN,CAAoB,KAApB,EAA2B;AAChCC,IAAAA,KAAK,EAAEzB,MADyB;AAEhC0B,IAAAA,GAAG,EAAEd;AAF2B,GAA3B,CAAP;AAID;;AAEDe,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCtB,aAAa,CAACuB,SAAd,GAA0B;AAChErB,EAAAA,QAAQ,EAAEX,SAAS,CAACiC,IAAV,CAAeC;AADuC,CAAlE,GAEI,KAAK,CAFT;AAGA,eAAezB,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'debounce'; // < 1kb payload overhead when lodash/debounce is > 3kb.\n\nvar styles = {\n  width: 99,\n  height: 99,\n  position: 'absolute',\n  top: -9999,\n  overflow: 'scroll',\n  // TODO Do we need this style for IE 11 support?\n  msOverflowStyle: 'scrollbar'\n};\n/**\n * @ignore - internal component.\n * The component is originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\n\nfunction ScrollbarSize(props) {\n  var onChange = props.onChange;\n  var scrollbarHeight = React.useRef();\n  var nodeRef = React.useRef(null);\n\n  var setMeasurements = function setMeasurements() {\n    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;\n  };\n\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      var prevHeight = scrollbarHeight.current;\n      setMeasurements();\n\n      if (prevHeight !== scrollbarHeight.current) {\n        onChange(scrollbarHeight.current);\n      }\n    }, 166); // Corresponds to 10 frames at 60 Hz.\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [onChange]);\n  React.useEffect(function () {\n    setMeasurements();\n    onChange(scrollbarHeight.current);\n  }, [onChange]);\n  return React.createElement(\"div\", {\n    style: styles,\n    ref: nodeRef\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;\nexport default ScrollbarSize;"]},"metadata":{},"sourceType":"module"}