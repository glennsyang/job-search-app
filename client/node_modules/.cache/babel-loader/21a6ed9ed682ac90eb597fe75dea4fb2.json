{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport { capitalize } from '../utils/helpers';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(50%)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Styles applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, edge === 'start' && classes.edgeStart, edge === 'end' && classes.edgeEnd, className)\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","map":{"version":3,"sources":["/Users/glennsheppard/Development/React/jobs/client/node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","fade","capitalize","SwitchBase","styles","theme","root","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","edgeStart","marginLeft","edgeEnd","marginRight","switchBase","top","left","color","palette","type","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","common","black","white","colorSecondary","secondary","checked","disabled","input","thumb","boxShadow","shadows","borderRadius","track","Switch","forwardRef","props","ref","classes","className","_props$color","_props$edge","edge","other","icon","createElement","checkedIcon","concat","process","env","NODE_ENV","propTypes","bool","node","object","isRequired","string","oneOf","defaultChecked","disableRipple","id","inputProps","inputRef","oneOfType","func","onChange","value","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport { capitalize } from '../utils/helpers';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(50%)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Styles applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, edge === 'start' && classes.edgeStart, edge === 'end' && classes.edgeEnd, className)\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"]},"metadata":{},"sourceType":"module"}