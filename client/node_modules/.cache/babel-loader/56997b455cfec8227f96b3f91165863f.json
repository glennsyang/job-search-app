{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport { capitalize, createChainedFunction } from '../utils/helpers';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin,\n      vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      autoHideDuration = props.autoHideDuration,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      disableWindowBlurListener = props.disableWindowBlurListener,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      TransitionComponent = props.TransitionComponent,\n      transitionDuration = props.transitionDuration,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(!open),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      exited = _React$useState2[0],\n      setExited = _React$useState2[1]; // Timer that controls delay before snackbar auto hides\n\n\n  var setAutoHideTimer = React.useCallback(function (autoHideDurationParam) {\n    var autoHideDurationBefore = autoHideDurationParam != null ? autoHideDurationParam : autoHideDuration;\n\n    if (!onClose || autoHideDurationBefore == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      var autoHideDurationAfter = autoHideDurationParam != null ? autoHideDurationParam : autoHideDuration;\n\n      if (!onClose || autoHideDurationAfter == null) {\n        return;\n      }\n\n      onClose(null, 'timeout');\n    }, autoHideDurationBefore);\n  }, [autoHideDuration, onClose]);\n  React.useEffect(function () {\n    if (open) setAutoHideTimer();\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      if (resumeHideDuration != null) {\n        setAutoHideTimer(resumeHideDuration);\n        return;\n      }\n\n      setAutoHideTimer(autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  /**\n   * The action to display.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['top', 'bottom']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Properties applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Properties applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key property to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} reason Can be:`\"timeout\"` (`autoHideDuration` expired) or: `\"clickaway\"`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If true, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` property isn't specified, it does nothing.\n   * If `autoHideDuration` property is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Properties applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nSnackbar.defaultProps = {\n  anchorOrigin: {\n    vertical: 'bottom',\n    horizontal: 'center'\n  },\n  disableWindowBlurListener: false,\n  TransitionComponent: Grow,\n  transitionDuration: {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  }\n};\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","map":{"version":3,"sources":["/Users/glennsheppard/Development/React/jobs/client/node_modules/@material-ui/core/esm/Snackbar/Snackbar.js"],"names":["_slicedToArray","_objectWithoutProperties","_defineProperty","_extends","React","PropTypes","clsx","withStyles","duration","ClickAwayListener","capitalize","createChainedFunction","Grow","SnackbarContent","styles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","root","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","Snackbar","forwardRef","props","ref","action","_props$anchorOrigin","anchorOrigin","vertical","horizontal","autoHideDuration","children","classes","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","TransitionProps","other","timerAutoHide","useRef","_React$useState","useState","_React$useState2","exited","setExited","setAutoHideTimer","useCallback","autoHideDurationParam","autoHideDurationBefore","clearTimeout","current","setTimeout","autoHideDurationAfter","useEffect","handlePause","handleResume","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","handleEnter","window","addEventListener","removeEventListener","undefined","createElement","onClickAway","concat","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","node","shape","oneOf","isRequired","number","element","object","string","bool","key","any","func","elementType","oneOfType","enter","exit","defaultProps","enteringScreen","leavingScreen","flip","name"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,SAASC,UAAT,EAAqBC,qBAArB,QAAkD,kBAAlD;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,MAAIC,IAAI,GAAG;AACTC,IAAAA,GAAG,EAAE;AADI,GAAX;AAGA,MAAIC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AADI,GAAd;AAGA,MAAIC,KAAK,GAAG;AACVC,IAAAA,cAAc,EAAE;AADN,GAAZ;AAGA,MAAIC,IAAI,GAAG;AACTD,IAAAA,cAAc,EAAE;AADP,GAAX;AAGA,MAAIE,IAAI,GAAG;AACTN,IAAAA,GAAG,EAAE;AADI,GAAX;AAGA,MAAIO,OAAO,GAAG;AACZL,IAAAA,MAAM,EAAE;AADI,GAAd;AAGA,MAAIM,MAAM,GAAG;AACXL,IAAAA,KAAK,EAAE;AADI,GAAb;AAGA,MAAIM,KAAK,GAAG;AACVJ,IAAAA,IAAI,EAAE;AADI,GAAZ;AAGA,MAAIK,MAAM,GAAG;AACXL,IAAAA,IAAI,EAAE,KADK;AAEXF,IAAAA,KAAK,EAAE,MAFI;AAGXQ,IAAAA,SAAS,EAAE;AAHA,GAAb;AAKA,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEf,KAAK,CAACe,MAAN,CAAaC,QADjB;AAEJC,MAAAA,QAAQ,EAAE,OAFN;AAGJC,MAAAA,OAAO,EAAE,MAHL;AAIJX,MAAAA,IAAI,EAAE,CAJF;AAKJF,MAAAA,KAAK,EAAE,CALH;AAMJC,MAAAA,cAAc,EAAE,QANZ;AAOJa,MAAAA,UAAU,EAAE;AAPR,KAFD;;AAYL;AACAC,IAAAA,qBAAqB,EAAEhC,QAAQ,CAAC,EAAD,EAAKa,IAAL,EAAWd,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC,EAAD,EAAKoB,IAAL,EAAWI,MAAX,CAAzC,CAA1B,CAb1B;;AAeL;AACAW,IAAAA,wBAAwB,EAAEnC,QAAQ,CAAC,EAAD,EAAKe,OAAL,EAAchB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC,EAAD,EAAKqB,OAAL,EAAcG,MAAd,CAAzC,CAA7B,CAhB7B;;AAkBL;AACAY,IAAAA,oBAAoB,EAAEpC,QAAQ,CAAC,EAAD,EAAKa,IAAL,EAAWI,KAAX,EAAkBlB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC;AACvGmB,MAAAA,IAAI,EAAE;AADiG,KAAD,EAErGC,IAFqG,EAE/FE,MAF+F,CAAzC,CAAjC,CAnBzB;;AAuBL;AACAe,IAAAA,uBAAuB,EAAErC,QAAQ,CAAC,EAAD,EAAKe,OAAL,EAAcE,KAAd,EAAqBlB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC;AAC7GmB,MAAAA,IAAI,EAAE;AADuG,KAAD,EAE3GE,OAF2G,EAElGC,MAFkG,CAAzC,CAApC,CAxB5B;;AA4BL;AACAgB,IAAAA,mBAAmB,EAAEtC,QAAQ,CAAC,EAAD,EAAKa,IAAL,EAAWM,IAAX,EAAiBpB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC;AACrGiB,MAAAA,KAAK,EAAE;AAD8F,KAAD,EAEnGG,IAFmG,EAE7FG,KAF6F,CAAzC,CAAhC,CA7BxB;;AAiCL;AACAgB,IAAAA,sBAAsB,EAAEvC,QAAQ,CAAC,EAAD,EAAKe,OAAL,EAAcI,IAAd,EAAoBpB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC;AAC3GiB,MAAAA,KAAK,EAAE;AADoG,KAAD,EAEzGI,OAFyG,EAEhGE,KAFgG,CAAzC,CAAnC;AAlC3B,GAAP;AAsCD,CApEM;AAqEP,IAAIiB,QAAQ,GAAGvC,KAAK,CAACwC,UAAN,CAAiB,SAASD,QAAT,CAAkBE,KAAlB,EAAyBC,GAAzB,EAA8B;AAC5D,MAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AAAA,MACIC,mBAAmB,GAAGH,KAAK,CAACI,YADhC;AAAA,MAEIC,QAAQ,GAAGF,mBAAmB,CAACE,QAFnC;AAAA,MAGIC,UAAU,GAAGH,mBAAmB,CAACG,UAHrC;AAAA,MAIIC,gBAAgB,GAAGP,KAAK,CAACO,gBAJ7B;AAAA,MAKIC,QAAQ,GAAGR,KAAK,CAACQ,QALrB;AAAA,MAMIC,OAAO,GAAGT,KAAK,CAACS,OANpB;AAAA,MAOIC,SAAS,GAAGV,KAAK,CAACU,SAPtB;AAAA,MAQIC,sBAAsB,GAAGX,KAAK,CAACW,sBARnC;AAAA,MASIC,YAAY,GAAGZ,KAAK,CAACY,YATzB;AAAA,MAUIC,yBAAyB,GAAGb,KAAK,CAACa,yBAVtC;AAAA,MAWIC,OAAO,GAAGd,KAAK,CAACc,OAXpB;AAAA,MAYIC,OAAO,GAAGf,KAAK,CAACe,OAZpB;AAAA,MAaIC,OAAO,GAAGhB,KAAK,CAACgB,OAbpB;AAAA,MAcIC,SAAS,GAAGjB,KAAK,CAACiB,SAdtB;AAAA,MAeIC,UAAU,GAAGlB,KAAK,CAACkB,UAfvB;AAAA,MAgBIC,MAAM,GAAGnB,KAAK,CAACmB,MAhBnB;AAAA,MAiBIC,QAAQ,GAAGpB,KAAK,CAACoB,QAjBrB;AAAA,MAkBIC,SAAS,GAAGrB,KAAK,CAACqB,SAlBtB;AAAA,MAmBIC,YAAY,GAAGtB,KAAK,CAACsB,YAnBzB;AAAA,MAoBIC,YAAY,GAAGvB,KAAK,CAACuB,YApBzB;AAAA,MAqBIC,IAAI,GAAGxB,KAAK,CAACwB,IArBjB;AAAA,MAsBIC,kBAAkB,GAAGzB,KAAK,CAACyB,kBAtB/B;AAAA,MAuBIC,mBAAmB,GAAG1B,KAAK,CAAC0B,mBAvBhC;AAAA,MAwBIC,kBAAkB,GAAG3B,KAAK,CAAC2B,kBAxB/B;AAAA,MAyBIC,eAAe,GAAG5B,KAAK,CAAC4B,eAzB5B;AAAA,MA0BIC,KAAK,GAAGzE,wBAAwB,CAAC4C,KAAD,EAAQ,CAAC,QAAD,EAAW,cAAX,EAA2B,kBAA3B,EAA+C,UAA/C,EAA2D,SAA3D,EAAsE,WAAtE,EAAmF,wBAAnF,EAA6G,cAA7G,EAA6H,2BAA7H,EAA0J,SAA1J,EAAqK,SAArK,EAAgL,SAAhL,EAA2L,WAA3L,EAAwM,YAAxM,EAAsN,QAAtN,EAAgO,UAAhO,EAA4O,WAA5O,EAAyP,cAAzP,EAAyQ,cAAzQ,EAAyR,MAAzR,EAAiS,oBAAjS,EAAuT,qBAAvT,EAA8U,oBAA9U,EAAoW,iBAApW,CAAR,CA1BpC;;AA4BA,MAAI8B,aAAa,GAAGvE,KAAK,CAACwE,MAAN,EAApB;;AAEA,MAAIC,eAAe,GAAGzE,KAAK,CAAC0E,QAAN,CAAe,CAACT,IAAhB,CAAtB;AAAA,MACIU,gBAAgB,GAAG/E,cAAc,CAAC6E,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,MAAM,GAAGD,gBAAgB,CAAC,CAAD,CAF7B;AAAA,MAGIE,SAAS,GAAGF,gBAAgB,CAAC,CAAD,CAHhC,CA/B4D,CAkCvB;;;AAGrC,MAAIG,gBAAgB,GAAG9E,KAAK,CAAC+E,WAAN,CAAkB,UAAUC,qBAAV,EAAiC;AACxE,QAAIC,sBAAsB,GAAGD,qBAAqB,IAAI,IAAzB,GAAgCA,qBAAhC,GAAwDhC,gBAArF;;AAEA,QAAI,CAACQ,OAAD,IAAYyB,sBAAsB,IAAI,IAA1C,EAAgD;AAC9C;AACD;;AAEDC,IAAAA,YAAY,CAACX,aAAa,CAACY,OAAf,CAAZ;AACAZ,IAAAA,aAAa,CAACY,OAAd,GAAwBC,UAAU,CAAC,YAAY;AAC7C,UAAIC,qBAAqB,GAAGL,qBAAqB,IAAI,IAAzB,GAAgCA,qBAAhC,GAAwDhC,gBAApF;;AAEA,UAAI,CAACQ,OAAD,IAAY6B,qBAAqB,IAAI,IAAzC,EAA+C;AAC7C;AACD;;AAED7B,MAAAA,OAAO,CAAC,IAAD,EAAO,SAAP,CAAP;AACD,KARiC,EAQ/ByB,sBAR+B,CAAlC;AASD,GAjBsB,EAiBpB,CAACjC,gBAAD,EAAmBQ,OAAnB,CAjBoB,CAAvB;AAkBAxD,EAAAA,KAAK,CAACsF,SAAN,CAAgB,YAAY;AAC1B,QAAIrB,IAAJ,EAAUa,gBAAgB;AAC1B,WAAO,YAAY;AACjBI,MAAAA,YAAY,CAACX,aAAa,CAACY,OAAf,CAAZ;AACD,KAFD;AAGD,GALD,EAKG,CAAClB,IAAD,EAAOa,gBAAP,CALH,EAvD4D,CA4D9B;AAC9B;;AAEA,MAAIS,WAAW,GAAG,SAASA,WAAT,GAAuB;AACvCL,IAAAA,YAAY,CAACX,aAAa,CAACY,OAAf,CAAZ;AACD,GAFD,CA/D4D,CAiEzD;AACH;;;AAGA,MAAIK,YAAY,GAAGxF,KAAK,CAAC+E,WAAN,CAAkB,YAAY;AAC/C,QAAI/B,gBAAgB,IAAI,IAAxB,EAA8B;AAC5B,UAAIkB,kBAAkB,IAAI,IAA1B,EAAgC;AAC9BY,QAAAA,gBAAgB,CAACZ,kBAAD,CAAhB;AACA;AACD;;AAEDY,MAAAA,gBAAgB,CAAC9B,gBAAgB,GAAG,GAApB,CAAhB;AACD;AACF,GATkB,EAShB,CAACA,gBAAD,EAAmBkB,kBAAnB,EAAuCY,gBAAvC,CATgB,CAAnB;;AAWA,MAAIW,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AACtD,QAAI3B,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAAC2B,KAAD,CAAZ;AACD;;AAEDH,IAAAA,WAAW;AACZ,GAND;;AAQA,MAAII,gBAAgB,GAAG,SAASA,gBAAT,CAA0BD,KAA1B,EAAiC;AACtD,QAAI1B,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAAC0B,KAAD,CAAZ;AACD;;AAEDF,IAAAA,YAAY;AACb,GAND;;AAQA,MAAII,eAAe,GAAG,SAASA,eAAT,CAAyBF,KAAzB,EAAgC;AACpD,QAAIlC,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACkC,KAAD,EAAQ,WAAR,CAAP;AACD;AACF,GAJD;;AAMA,MAAIG,YAAY,GAAG,SAASA,YAAT,GAAwB;AACzChB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAIA,MAAIiB,WAAW,GAAG,SAASA,WAAT,GAAuB;AACvCjB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA7E,EAAAA,KAAK,CAACsF,SAAN,CAAgB,YAAY;AAC1B,QAAI,CAAChC,yBAAL,EAAgC;AAC9ByC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCR,YAAjC;AACAO,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCT,WAAhC;AACA,aAAO,YAAY;AACjBQ,QAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCT,YAApC;AACAO,QAAAA,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmCV,WAAnC;AACD,OAHD;AAID;;AAED,WAAOW,SAAP;AACD,GAXD,EAWG,CAAC5C,yBAAD,EAA4BkC,YAA5B,CAXH,EA9G4D,CAyHb;;AAE/C,MAAI,CAACvB,IAAD,IAASW,MAAb,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,SAAO5E,KAAK,CAACmG,aAAN,CAAoB9F,iBAApB,EAAuCN,QAAQ,CAAC;AACrDqG,IAAAA,WAAW,EAAER;AADwC,GAAD,EAEnDxC,sBAFmD,CAA/C,EAEqBpD,KAAK,CAACmG,aAAN,CAAoB,KAApB,EAA2BpG,QAAQ,CAAC;AAC9DoD,IAAAA,SAAS,EAAEjD,IAAI,CAACgD,OAAO,CAACzB,IAAT,EAAeyB,OAAO,CAAC,eAAemD,MAAf,CAAsB/F,UAAU,CAACwC,QAAD,CAAhC,EAA4CuD,MAA5C,CAAmD/F,UAAU,CAACyC,UAAD,CAA7D,CAAD,CAAtB,EAAoGI,SAApG,CAD+C;AAE9DY,IAAAA,YAAY,EAAE0B,gBAFgD;AAG9DzB,IAAAA,YAAY,EAAE2B,gBAHgD;AAI9DjD,IAAAA,GAAG,EAAEA;AAJyD,GAAD,EAK5D4B,KAL4D,CAAnC,EAKjBtE,KAAK,CAACmG,aAAN,CAAoBhC,mBAApB,EAAyCpE,QAAQ,CAAC;AAC3DuG,IAAAA,MAAM,EAAE,IADmD;AAE3DC,IAAAA,EAAE,EAAEtC,IAFuD;AAG3DR,IAAAA,OAAO,EAAElD,qBAAqB,CAACuF,WAAD,EAAcrC,OAAd,CAH6B;AAI3DC,IAAAA,SAAS,EAAEA,SAJgD;AAK3DC,IAAAA,UAAU,EAAEA,UAL+C;AAM3DC,IAAAA,MAAM,EAAEA,MANmD;AAO3DC,IAAAA,QAAQ,EAAEtD,qBAAqB,CAACsF,YAAD,EAAehC,QAAf,CAP4B;AAQ3DC,IAAAA,SAAS,EAAEA,SARgD;AAS3D0C,IAAAA,OAAO,EAAEpC,kBATkD;AAU3DqC,IAAAA,SAAS,EAAE3D,QAAQ,KAAK,KAAb,GAAqB,MAArB,GAA8B;AAVkB,GAAD,EAWzDuB,eAXyD,CAAjD,EAWUpB,QAAQ,IAAIjD,KAAK,CAACmG,aAAN,CAAoB1F,eAApB,EAAqCV,QAAQ,CAAC;AAC7EwD,IAAAA,OAAO,EAAEA,OADoE;AAE7EZ,IAAAA,MAAM,EAAEA;AAFqE,GAAD,EAG3EU,YAH2E,CAA7C,CAXtB,CALiB,CAFrB,CAAP;AAsBD,CArJc,CAAf;AAsJAqD,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrE,QAAQ,CAACsE,SAAT,GAAqB;AAC3D;;;AAGAlE,EAAAA,MAAM,EAAE1C,SAAS,CAAC6G,IAJyC;;AAM3D;;;AAGAjE,EAAAA,YAAY,EAAE5C,SAAS,CAAC8G,KAAV,CAAgB;AAC5BhE,IAAAA,UAAU,EAAE9C,SAAS,CAAC+G,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,EAA6CC,UAD7B;AAE5BnE,IAAAA,QAAQ,EAAE7C,SAAS,CAAC+G,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB,EAAmCC;AAFjB,GAAhB,CAT6C;;AAc3D;;;;;;AAMAjE,EAAAA,gBAAgB,EAAE/C,SAAS,CAACiH,MApB+B;;AAsB3D;;;AAGAjE,EAAAA,QAAQ,EAAEhD,SAAS,CAACkH,OAzBuC;;AA2B3D;;;;AAIAjE,EAAAA,OAAO,EAAEjD,SAAS,CAACmH,MAAV,CAAiBH,UA/BiC;;AAiC3D;;;AAGA9D,EAAAA,SAAS,EAAElD,SAAS,CAACoH,MApCsC;;AAsC3D;;;AAGAjE,EAAAA,sBAAsB,EAAEnD,SAAS,CAACmH,MAzCyB;;AA2C3D;;;AAGA/D,EAAAA,YAAY,EAAEpD,SAAS,CAACmH,MA9CmC;;AAgD3D;;;AAGA9D,EAAAA,yBAAyB,EAAErD,SAAS,CAACqH,IAnDsB;;AAqD3D;;;;;;AAMAC,EAAAA,GAAG,EAAEtH,SAAS,CAACuH,GA3D4C;;AA6D3D;;;AAGAjE,EAAAA,OAAO,EAAEtD,SAAS,CAAC6G,IAhEwC;;AAkE3D;;;;;;;;;;AAUAtD,EAAAA,OAAO,EAAEvD,SAAS,CAACwH,IA5EwC;;AA8E3D;;;AAGAhE,EAAAA,OAAO,EAAExD,SAAS,CAACwH,IAjFwC;;AAmF3D;;;AAGA/D,EAAAA,SAAS,EAAEzD,SAAS,CAACwH,IAtFsC;;AAwF3D;;;AAGA9D,EAAAA,UAAU,EAAE1D,SAAS,CAACwH,IA3FqC;;AA6F3D;;;AAGA7D,EAAAA,MAAM,EAAE3D,SAAS,CAACwH,IAhGyC;;AAkG3D;;;AAGA5D,EAAAA,QAAQ,EAAE5D,SAAS,CAACwH,IArGuC;;AAuG3D;;;AAGA3D,EAAAA,SAAS,EAAE7D,SAAS,CAACwH,IA1GsC;;AA4G3D;;;AAGA1D,EAAAA,YAAY,EAAE9D,SAAS,CAACwH,IA/GmC;;AAiH3D;;;AAGAzD,EAAAA,YAAY,EAAE/D,SAAS,CAACwH,IApHmC;;AAsH3D;;;AAGAxD,EAAAA,IAAI,EAAEhE,SAAS,CAACqH,IAzH2C;;AA2H3D;;;;;;AAMApD,EAAAA,kBAAkB,EAAEjE,SAAS,CAACiH,MAjI6B;;AAmI3D;;;AAGA/C,EAAAA,mBAAmB,EAAElE,SAAS,CAACyH,WAtI4B;;AAwI3D;;;;AAIAtD,EAAAA,kBAAkB,EAAEnE,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAACiH,MAAX,EAAmBjH,SAAS,CAAC8G,KAAV,CAAgB;AACzEa,IAAAA,KAAK,EAAE3H,SAAS,CAACiH,MADwD;AAEzEW,IAAAA,IAAI,EAAE5H,SAAS,CAACiH;AAFyD,GAAhB,CAAnB,CAApB,CA5IuC;;AAiJ3D;;;AAGA7C,EAAAA,eAAe,EAAEpE,SAAS,CAACmH;AApJgC,CAA7D,GAqJI,KAAK,CArJT;AAsJA7E,QAAQ,CAACuF,YAAT,GAAwB;AACtBjF,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,QADE;AAEZC,IAAAA,UAAU,EAAE;AAFA,GADQ;AAKtBO,EAAAA,yBAAyB,EAAE,KALL;AAMtBa,EAAAA,mBAAmB,EAAE3D,IANC;AAOtB4D,EAAAA,kBAAkB,EAAE;AAClBwD,IAAAA,KAAK,EAAExH,QAAQ,CAAC2H,cADE;AAElBF,IAAAA,IAAI,EAAEzH,QAAQ,CAAC4H;AAFG;AAPE,CAAxB;AAYA,eAAe7H,UAAU,CAACO,MAAD,EAAS;AAChCuH,EAAAA,IAAI,EAAE,KAD0B;AAEhCC,EAAAA,IAAI,EAAE;AAF0B,CAAT,CAAV,CAGZ3F,QAHY,CAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport { capitalize, createChainedFunction } from '../utils/helpers';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin,\n      vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      autoHideDuration = props.autoHideDuration,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      disableWindowBlurListener = props.disableWindowBlurListener,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      TransitionComponent = props.TransitionComponent,\n      transitionDuration = props.transitionDuration,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(!open),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      exited = _React$useState2[0],\n      setExited = _React$useState2[1]; // Timer that controls delay before snackbar auto hides\n\n\n  var setAutoHideTimer = React.useCallback(function (autoHideDurationParam) {\n    var autoHideDurationBefore = autoHideDurationParam != null ? autoHideDurationParam : autoHideDuration;\n\n    if (!onClose || autoHideDurationBefore == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      var autoHideDurationAfter = autoHideDurationParam != null ? autoHideDurationParam : autoHideDuration;\n\n      if (!onClose || autoHideDurationAfter == null) {\n        return;\n      }\n\n      onClose(null, 'timeout');\n    }, autoHideDurationBefore);\n  }, [autoHideDuration, onClose]);\n  React.useEffect(function () {\n    if (open) setAutoHideTimer();\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      if (resumeHideDuration != null) {\n        setAutoHideTimer(resumeHideDuration);\n        return;\n      }\n\n      setAutoHideTimer(autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  /**\n   * The action to display.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['top', 'bottom']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Properties applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Properties applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key property to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} reason Can be:`\"timeout\"` (`autoHideDuration` expired) or: `\"clickaway\"`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If true, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` property isn't specified, it does nothing.\n   * If `autoHideDuration` property is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Properties applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nSnackbar.defaultProps = {\n  anchorOrigin: {\n    vertical: 'bottom',\n    horizontal: 'center'\n  },\n  disableWindowBlurListener: false,\n  TransitionComponent: Grow,\n  transitionDuration: {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  }\n};\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);"]},"metadata":{},"sourceType":"module"}