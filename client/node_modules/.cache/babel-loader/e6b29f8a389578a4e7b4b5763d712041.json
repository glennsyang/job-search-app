{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport { isMuiElement, useForkRef } from '../utils/reactHelpers';\nimport ListContext from '../List/ListContext';\nimport ReactDOM from 'react-dom';\nimport warning from 'warning';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the `component`'s `focusVisibleClassName` property if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      autoFocus = props.autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      dense = props.dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Material-UI: unable to set focus to a ListItem whose component has not been rendered.') : void 0;\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems === 'flex-start' && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected, className),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return React.createElement(ListContext.Provider, {\n      value: childContext\n    }, React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return React.createElement(ListContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`).\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: you used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Properties applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","map":{"version":3,"sources":["/Users/glennsheppard/Development/React/jobs/client/node_modules/@material-ui/core/esm/ListItem/ListItem.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","chainPropTypes","withStyles","ButtonBase","isMuiElement","useForkRef","ListContext","ReactDOM","warning","styles","theme","root","display","justifyContent","alignItems","position","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","backgroundColor","palette","action","selected","opacity","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","borderBottom","concat","backgroundClip","gutters","paddingLeft","paddingRight","button","transition","transitions","create","duration","shortest","hover","secondaryAction","useEnhancedEffect","window","useEffect","useLayoutEffect","ListItem","forwardRef","props","ref","_props$alignItems","autoFocus","_props$button","childrenProp","children","classes","className","componentProp","component","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$disabled","_props$disableGutters","disableGutters","_props$divider","focusVisibleClassName","_props$selected","other","context","useContext","childContext","listItemRef","useRef","current","focus","process","env","NODE_ENV","Children","toArray","hasSecondaryAction","length","handleOwnRef","useCallback","instance","findDOMNode","handleRef","componentProps","Component","createElement","Provider","value","pop","propTypes","oneOf","bool","node","secondaryActionIndex","i","child","Error","object","isRequired","string","elementType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport { isMuiElement, useForkRef } from '../utils/reactHelpers';\nimport ListContext from '../List/ListContext';\nimport ReactDOM from 'react-dom';\nimport warning from 'warning';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the `component`'s `focusVisibleClassName` property if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      autoFocus = props.autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      dense = props.dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Material-UI: unable to set focus to a ListItem whose component has not been rendered.') : void 0;\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems === 'flex-start' && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected, className),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return React.createElement(ListContext.Provider, {\n      value: childContext\n    }, React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return React.createElement(ListContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`).\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: you used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Properties applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);"]},"metadata":{},"sourceType":"module"}