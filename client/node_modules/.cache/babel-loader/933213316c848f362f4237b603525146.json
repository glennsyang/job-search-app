{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar defaultConnector = React.createElement(StepConnector, null);\nvar Stepper = React.forwardRef(function Stepper(props, ref) {\n  var _props$activeStep = props.activeStep,\n      activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$connector = props.connector,\n      connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector,\n      _props$nonLinear = props.nonLinear,\n      nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var className = clsx(classes.root, classes[orientation], alternativeLabel && classes.alternativeLabel, classNameProp);\n  var connector = React.isValidElement(connectorProp) ? React.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map(function (step, index) {\n    var controlProps = {\n      alternativeLabel: alternativeLabel,\n      connector: connectorProp,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    };\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return [!alternativeLabel && connector && index !== 0 && React.cloneElement(connector, _extends({\n      key: index\n    }, state)), React.cloneElement(step, _extends({}, controlProps, state, step.props))];\n  });\n  return React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: className,\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  /**\n   * Set the active step (zero based index).\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A component to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);","map":{"version":3,"sources":["/Users/glennsheppard/Development/React/jobs/client/node_modules/@material-ui/core/esm/Stepper/Stepper.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","Paper","StepConnector","styles","root","display","padding","horizontal","flexDirection","alignItems","vertical","alternativeLabel","defaultConnector","createElement","Stepper","forwardRef","props","ref","_props$activeStep","activeStep","_props$alternativeLab","children","classes","classNameProp","className","_props$connector","connector","connectorProp","_props$nonLinear","nonLinear","_props$orientation","orientation","other","isValidElement","cloneElement","childrenArray","Children","toArray","steps","map","step","index","controlProps","last","length","state","active","completed","disabled","key","square","elevation","process","env","NODE_ENV","propTypes","number","bool","node","isRequired","object","string","element","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar defaultConnector = React.createElement(StepConnector, null);\nvar Stepper = React.forwardRef(function Stepper(props, ref) {\n  var _props$activeStep = props.activeStep,\n      activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$connector = props.connector,\n      connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector,\n      _props$nonLinear = props.nonLinear,\n      nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var className = clsx(classes.root, classes[orientation], alternativeLabel && classes.alternativeLabel, classNameProp);\n  var connector = React.isValidElement(connectorProp) ? React.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map(function (step, index) {\n    var controlProps = {\n      alternativeLabel: alternativeLabel,\n      connector: connectorProp,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    };\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return [!alternativeLabel && connector && index !== 0 && React.cloneElement(connector, _extends({\n      key: index\n    }, state)), React.cloneElement(step, _extends({}, controlProps, state, step.props))];\n  });\n  return React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: className,\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  /**\n   * Set the active step (zero based index).\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A component to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);"]},"metadata":{},"sourceType":"module"}