{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/* eslint-disable no-restricted-globals */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport EventListener from 'react-event-listener';\nimport debounce from 'debounce'; // < 1kb payload overhead when lodash/debounce is > 3kb.\n\nimport { getNormalizedScrollLeft, detectScrollType } from 'normalize-scroll-left';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from './TabScrollButton';\nimport withForwardedRef from '../utils/withForwardedRef';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n    scrollable: {\n      overflowX: 'scroll'\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\n    scrollButtonsDesktop: _defineProperty({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tabs).call(this));\n    _this.state = {\n      indicatorStyle: {},\n      scrollerStyle: {\n        overflow: 'hidden',\n        marginBottom: null\n      },\n      showLeftScroll: false,\n      showRightScroll: false,\n      mounted: false\n    };\n\n    _this.getConditionalElements = function () {\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          ScrollButtonComponent = _this$props.ScrollButtonComponent,\n          scrollButtons = _this$props.scrollButtons,\n          theme = _this$props.theme,\n          variant = _this$props.variant;\n      var _this$state = _this.state,\n          showLeftScroll = _this$state.showLeftScroll,\n          showRightScroll = _this$state.showRightScroll;\n      var conditionalElements = {};\n      var scrollable = variant === 'scrollable';\n      conditionalElements.scrollbarSizeListener = scrollable ? React.createElement(ScrollbarSize, {\n        onChange: _this.handleScrollbarSizeChange\n      }) : null;\n      var scrollButtonsActive = showLeftScroll || showRightScroll;\n      var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\n      conditionalElements.scrollButtonLeft = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n        direction: theme.direction === 'rtl' ? 'right' : 'left',\n        onClick: _this.handleLeftScrollClick,\n        visible: showLeftScroll,\n        className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n      }) : null;\n      conditionalElements.scrollButtonRight = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n        direction: theme.direction === 'rtl' ? 'left' : 'right',\n        onClick: _this.handleRightScrollClick,\n        visible: showRightScroll,\n        className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n      }) : null;\n      return conditionalElements;\n    };\n\n    _this.getTabsMeta = function (value, direction) {\n      var tabsMeta;\n\n      if (_this.tabsRef) {\n        var rect = _this.tabsRef.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n\n        tabsMeta = {\n          clientWidth: _this.tabsRef.clientWidth,\n          scrollLeft: _this.tabsRef.scrollLeft,\n          scrollLeftNormalized: getNormalizedScrollLeft(_this.tabsRef, direction),\n          scrollWidth: _this.tabsRef.scrollWidth,\n          left: rect.left,\n          right: rect.right\n        };\n      }\n\n      var tabMeta;\n\n      if (_this.tabsRef && value !== false) {\n        var children = _this.tabsRef.children[0].children;\n\n        if (children.length > 0) {\n          var tab = children[_this.valueToIndex.get(value)];\n\n          process.env.NODE_ENV !== \"production\" ? warning(tab, [\"Material-UI: the value provided `\".concat(value, \"` to the Tabs component is invalid.\"), 'None of the Tabs children have this value.', _this.valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(_this.valueToIndex.keys()).join(', '), \".\") : null].join('\\n')) : void 0;\n          tabMeta = tab ? tab.getBoundingClientRect() : null;\n        }\n      }\n\n      return {\n        tabsMeta: tabsMeta,\n        tabMeta: tabMeta\n      };\n    };\n\n    _this.handleLeftScrollClick = function () {\n      _this.moveTabsScroll(-_this.tabsRef.clientWidth);\n    };\n\n    _this.handleRightScrollClick = function () {\n      _this.moveTabsScroll(_this.tabsRef.clientWidth);\n    };\n\n    _this.handleScrollbarSizeChange = function (scrollbarHeight) {\n      _this.setState({\n        scrollerStyle: {\n          overflow: null,\n          marginBottom: -scrollbarHeight\n        }\n      });\n    };\n\n    _this.handleTabsRef = function (ref) {\n      _this.tabsRef = ref;\n    };\n\n    _this.moveTabsScroll = function (delta) {\n      var theme = _this.props.theme;\n      var multiplier = theme.direction === 'rtl' ? -1 : 1;\n      var nextScrollLeft = _this.tabsRef.scrollLeft + delta * multiplier; // Fix for Edge\n\n      var invert = theme.direction === 'rtl' && detectScrollType() === 'reverse' ? -1 : 1;\n\n      _this.scroll(invert * nextScrollLeft);\n    };\n\n    _this.scrollSelectedIntoView = function () {\n      var _this$props2 = _this.props,\n          theme = _this$props2.theme,\n          value = _this$props2.value;\n\n      var _this$getTabsMeta = _this.getTabsMeta(value, theme.direction),\n          tabsMeta = _this$getTabsMeta.tabsMeta,\n          tabMeta = _this$getTabsMeta.tabMeta;\n\n      if (!tabMeta || !tabsMeta) {\n        return;\n      }\n\n      if (tabMeta.left < tabsMeta.left) {\n        // left side of button is out of view\n        var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);\n\n        _this.scroll(nextScrollLeft);\n      } else if (tabMeta.right > tabsMeta.right) {\n        // right side of button is out of view\n        var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);\n\n        _this.scroll(_nextScrollLeft);\n      }\n    };\n\n    _this.scroll = function (value) {\n      animate('scrollLeft', _this.tabsRef, value);\n    };\n\n    _this.updateScrollButtonState = function () {\n      var _this$props3 = _this.props,\n          scrollButtons = _this$props3.scrollButtons,\n          theme = _this$props3.theme,\n          variant = _this$props3.variant;\n      var scrollable = variant === 'scrollable';\n\n      if (scrollable && scrollButtons !== 'off') {\n        var _this$tabsRef = _this.tabsRef,\n            scrollWidth = _this$tabsRef.scrollWidth,\n            clientWidth = _this$tabsRef.clientWidth;\n        var scrollLeft = getNormalizedScrollLeft(_this.tabsRef, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        var showLeftScroll = theme.direction === 'rtl' ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        var showRightScroll = theme.direction !== 'rtl' ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n\n        if (showLeftScroll !== _this.state.showLeftScroll || showRightScroll !== _this.state.showRightScroll) {\n          _this.setState({\n            showLeftScroll: showLeftScroll,\n            showRightScroll: showRightScroll\n          });\n        }\n      }\n    };\n\n    if (typeof window !== 'undefined') {\n      _this.handleResize = debounce(function () {\n        _this.updateIndicatorState(_this.props);\n\n        _this.updateScrollButtonState();\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n\n      _this.handleTabsScroll = debounce(function () {\n        _this.updateScrollButtonState();\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n    }\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        mounted: true\n      });\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.props.action) {\n        this.props.action({\n          updateIndicator: this.handleResize\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // The index might have changed at the same time.\n      // We need to check again the right indicator position.\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.state.indicatorStyle !== prevState.indicatorStyle) {\n        this.scrollSelectedIntoView();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleResize.clear();\n      this.handleTabsScroll.clear();\n    }\n  }, {\n    key: \"updateIndicatorState\",\n    value: function updateIndicatorState(props) {\n      var theme = props.theme,\n          value = props.value;\n\n      var _this$getTabsMeta2 = this.getTabsMeta(value, theme.direction),\n          tabsMeta = _this$getTabsMeta2.tabsMeta,\n          tabMeta = _this$getTabsMeta2.tabMeta;\n\n      var left = 0;\n\n      if (tabMeta && tabsMeta) {\n        var correction = theme.direction === 'rtl' ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        left = Math.round(tabMeta.left - tabsMeta.left + correction);\n      }\n\n      var indicatorStyle = {\n        left: left,\n        // May be wrong until the font is loaded.\n        width: tabMeta ? Math.round(tabMeta.width) : 0\n      };\n\n      if ((indicatorStyle.left !== this.state.indicatorStyle.left || indicatorStyle.width !== this.state.indicatorStyle.width) && !isNaN(indicatorStyle.left) && !isNaN(indicatorStyle.width)) {\n        this.setState({\n          indicatorStyle: indicatorStyle\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          action = _this$props4.action,\n          centered = _this$props4.centered,\n          childrenProp = _this$props4.children,\n          classes = _this$props4.classes,\n          classNameProp = _this$props4.className,\n          Component = _this$props4.component,\n          indicatorColor = _this$props4.indicatorColor,\n          innerRef = _this$props4.innerRef,\n          onChange = _this$props4.onChange,\n          ScrollButtonComponent = _this$props4.ScrollButtonComponent,\n          scrollButtons = _this$props4.scrollButtons,\n          _this$props4$TabIndic = _this$props4.TabIndicatorProps,\n          TabIndicatorProps = _this$props4$TabIndic === void 0 ? {} : _this$props4$TabIndic,\n          textColor = _this$props4.textColor,\n          theme = _this$props4.theme,\n          value = _this$props4.value,\n          variant = _this$props4.variant,\n          other = _objectWithoutProperties(_this$props4, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"innerRef\", \"onChange\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"theme\", \"value\", \"variant\"]);\n\n      var scrollable = variant === 'scrollable';\n      process.env.NODE_ENV !== \"production\" ? warning(!centered || !scrollable, 'Material-UI: you can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.') : void 0;\n      var className = clsx(classes.root, classNameProp);\n      var flexContainerClassName = clsx(classes.flexContainer, centered && !scrollable && classes.centered);\n      var scrollerClassName = clsx(classes.scroller, !scrollable && classes.fixed, scrollable && classes.scrollable);\n      var indicator = React.createElement(TabIndicator, _extends({\n        className: classes.indicator,\n        color: indicatorColor\n      }, TabIndicatorProps, {\n        style: _extends({}, this.state.indicatorStyle, TabIndicatorProps.style)\n      }));\n      this.valueToIndex = new Map();\n      var childIndex = 0;\n      var children = React.Children.map(childrenProp, function (child) {\n        if (!React.isValidElement(child)) {\n          return null;\n        }\n\n        process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n        var childValue = child.props.value === undefined ? childIndex : child.props.value;\n\n        _this2.valueToIndex.set(childValue, childIndex);\n\n        var selected = childValue === value;\n        childIndex += 1;\n        return React.cloneElement(child, {\n          fullWidth: variant === 'fullWidth',\n          indicator: selected && !_this2.state.mounted && indicator,\n          selected: selected,\n          onChange: onChange,\n          textColor: textColor,\n          value: childValue\n        });\n      });\n      var conditionalElements = this.getConditionalElements();\n      return React.createElement(Component, _extends({\n        className: className,\n        ref: innerRef\n      }, other), React.createElement(EventListener, {\n        target: \"window\",\n        onResize: this.handleResize\n      }), conditionalElements.scrollbarSizeListener, React.createElement(\"div\", {\n        className: classes.flexContainer\n      }, conditionalElements.scrollButtonLeft, React.createElement(\"div\", {\n        className: scrollerClassName,\n        style: this.state.scrollerStyle,\n        ref: this.handleTabsRef,\n        role: \"tablist\",\n        onScroll: this.handleTabsScroll\n      }, React.createElement(\"div\", {\n        className: flexContainerClassName\n      }, children), this.state.mounted && indicator), conditionalElements.scrollButtonRight));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `updateIndicator()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: PropTypes.func,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: PropTypes.oneOf(['secondary', 'primary']),\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `desktop` will only present them on medium and larger viewports.\n   * - `on` will always present them.\n   * - `off` will never present them.\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'on', 'off']),\n\n  /**\n   * Properties applied to the `TabIndicator` element.\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   *  Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: PropTypes.oneOf(['standard', 'scrollable', 'fullWidth'])\n} : void 0;\nTabs.defaultProps = {\n  centered: false,\n  component: 'div',\n  indicatorColor: 'secondary',\n  ScrollButtonComponent: TabScrollButton,\n  scrollButtons: 'auto',\n  textColor: 'inherit',\n  variant: 'standard'\n};\nexport default withStyles(styles, {\n  name: 'MuiTabs',\n  withTheme: true\n})(withForwardedRef(Tabs));","map":{"version":3,"sources":["/Users/glennsheppard/Development/React/jobs/client/node_modules/@material-ui/core/esm/Tabs/Tabs.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_defineProperty","React","PropTypes","warning","clsx","EventListener","debounce","getNormalizedScrollLeft","detectScrollType","animate","ScrollbarSize","withStyles","TabIndicator","TabScrollButton","withForwardedRef","styles","theme","root","overflow","minHeight","WebkitOverflowScrolling","flexContainer","display","centered","justifyContent","scroller","position","flex","whiteSpace","fixed","overflowX","width","scrollable","scrollButtons","scrollButtonsDesktop","breakpoints","down","indicator","Tabs","_React$Component","_this","call","state","indicatorStyle","scrollerStyle","marginBottom","showLeftScroll","showRightScroll","mounted","getConditionalElements","_this$props","props","classes","ScrollButtonComponent","variant","_this$state","conditionalElements","scrollbarSizeListener","createElement","onChange","handleScrollbarSizeChange","scrollButtonsActive","showScrollButtons","scrollButtonLeft","direction","onClick","handleLeftScrollClick","visible","className","scrollButtonRight","handleRightScrollClick","getTabsMeta","value","tabsMeta","tabsRef","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollLeftNormalized","scrollWidth","left","right","tabMeta","children","length","tab","valueToIndex","get","process","env","NODE_ENV","concat","keys","Array","from","join","moveTabsScroll","scrollbarHeight","setState","handleTabsRef","ref","delta","multiplier","nextScrollLeft","invert","scroll","scrollSelectedIntoView","_this$props2","_this$getTabsMeta","_nextScrollLeft","updateScrollButtonState","_this$props3","_this$tabsRef","window","handleResize","updateIndicatorState","handleTabsScroll","key","componentDidMount","action","updateIndicator","componentDidUpdate","prevProps","prevState","componentWillUnmount","clear","_this$getTabsMeta2","correction","Math","round","isNaN","render","_this2","_this$props4","childrenProp","classNameProp","Component","component","indicatorColor","innerRef","_this$props4$TabIndic","TabIndicatorProps","textColor","other","flexContainerClassName","scrollerClassName","color","style","Map","childIndex","Children","map","child","isValidElement","type","Fragment","childValue","undefined","set","selected","cloneElement","fullWidth","target","onResize","role","onScroll","propTypes","func","bool","node","object","isRequired","string","elementType","oneOf","oneOfType","any","defaultProps","name","withTheme"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/* eslint-disable no-restricted-globals */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport EventListener from 'react-event-listener';\nimport debounce from 'debounce'; // < 1kb payload overhead when lodash/debounce is > 3kb.\n\nimport { getNormalizedScrollLeft, detectScrollType } from 'normalize-scroll-left';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from './TabScrollButton';\nimport withForwardedRef from '../utils/withForwardedRef';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n    scrollable: {\n      overflowX: 'scroll'\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\n    scrollButtonsDesktop: _defineProperty({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tabs).call(this));\n    _this.state = {\n      indicatorStyle: {},\n      scrollerStyle: {\n        overflow: 'hidden',\n        marginBottom: null\n      },\n      showLeftScroll: false,\n      showRightScroll: false,\n      mounted: false\n    };\n\n    _this.getConditionalElements = function () {\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          ScrollButtonComponent = _this$props.ScrollButtonComponent,\n          scrollButtons = _this$props.scrollButtons,\n          theme = _this$props.theme,\n          variant = _this$props.variant;\n      var _this$state = _this.state,\n          showLeftScroll = _this$state.showLeftScroll,\n          showRightScroll = _this$state.showRightScroll;\n      var conditionalElements = {};\n      var scrollable = variant === 'scrollable';\n      conditionalElements.scrollbarSizeListener = scrollable ? React.createElement(ScrollbarSize, {\n        onChange: _this.handleScrollbarSizeChange\n      }) : null;\n      var scrollButtonsActive = showLeftScroll || showRightScroll;\n      var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\n      conditionalElements.scrollButtonLeft = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n        direction: theme.direction === 'rtl' ? 'right' : 'left',\n        onClick: _this.handleLeftScrollClick,\n        visible: showLeftScroll,\n        className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n      }) : null;\n      conditionalElements.scrollButtonRight = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n        direction: theme.direction === 'rtl' ? 'left' : 'right',\n        onClick: _this.handleRightScrollClick,\n        visible: showRightScroll,\n        className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n      }) : null;\n      return conditionalElements;\n    };\n\n    _this.getTabsMeta = function (value, direction) {\n      var tabsMeta;\n\n      if (_this.tabsRef) {\n        var rect = _this.tabsRef.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n\n        tabsMeta = {\n          clientWidth: _this.tabsRef.clientWidth,\n          scrollLeft: _this.tabsRef.scrollLeft,\n          scrollLeftNormalized: getNormalizedScrollLeft(_this.tabsRef, direction),\n          scrollWidth: _this.tabsRef.scrollWidth,\n          left: rect.left,\n          right: rect.right\n        };\n      }\n\n      var tabMeta;\n\n      if (_this.tabsRef && value !== false) {\n        var children = _this.tabsRef.children[0].children;\n\n        if (children.length > 0) {\n          var tab = children[_this.valueToIndex.get(value)];\n\n          process.env.NODE_ENV !== \"production\" ? warning(tab, [\"Material-UI: the value provided `\".concat(value, \"` to the Tabs component is invalid.\"), 'None of the Tabs children have this value.', _this.valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(_this.valueToIndex.keys()).join(', '), \".\") : null].join('\\n')) : void 0;\n          tabMeta = tab ? tab.getBoundingClientRect() : null;\n        }\n      }\n\n      return {\n        tabsMeta: tabsMeta,\n        tabMeta: tabMeta\n      };\n    };\n\n    _this.handleLeftScrollClick = function () {\n      _this.moveTabsScroll(-_this.tabsRef.clientWidth);\n    };\n\n    _this.handleRightScrollClick = function () {\n      _this.moveTabsScroll(_this.tabsRef.clientWidth);\n    };\n\n    _this.handleScrollbarSizeChange = function (scrollbarHeight) {\n      _this.setState({\n        scrollerStyle: {\n          overflow: null,\n          marginBottom: -scrollbarHeight\n        }\n      });\n    };\n\n    _this.handleTabsRef = function (ref) {\n      _this.tabsRef = ref;\n    };\n\n    _this.moveTabsScroll = function (delta) {\n      var theme = _this.props.theme;\n      var multiplier = theme.direction === 'rtl' ? -1 : 1;\n      var nextScrollLeft = _this.tabsRef.scrollLeft + delta * multiplier; // Fix for Edge\n\n      var invert = theme.direction === 'rtl' && detectScrollType() === 'reverse' ? -1 : 1;\n\n      _this.scroll(invert * nextScrollLeft);\n    };\n\n    _this.scrollSelectedIntoView = function () {\n      var _this$props2 = _this.props,\n          theme = _this$props2.theme,\n          value = _this$props2.value;\n\n      var _this$getTabsMeta = _this.getTabsMeta(value, theme.direction),\n          tabsMeta = _this$getTabsMeta.tabsMeta,\n          tabMeta = _this$getTabsMeta.tabMeta;\n\n      if (!tabMeta || !tabsMeta) {\n        return;\n      }\n\n      if (tabMeta.left < tabsMeta.left) {\n        // left side of button is out of view\n        var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);\n\n        _this.scroll(nextScrollLeft);\n      } else if (tabMeta.right > tabsMeta.right) {\n        // right side of button is out of view\n        var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);\n\n        _this.scroll(_nextScrollLeft);\n      }\n    };\n\n    _this.scroll = function (value) {\n      animate('scrollLeft', _this.tabsRef, value);\n    };\n\n    _this.updateScrollButtonState = function () {\n      var _this$props3 = _this.props,\n          scrollButtons = _this$props3.scrollButtons,\n          theme = _this$props3.theme,\n          variant = _this$props3.variant;\n      var scrollable = variant === 'scrollable';\n\n      if (scrollable && scrollButtons !== 'off') {\n        var _this$tabsRef = _this.tabsRef,\n            scrollWidth = _this$tabsRef.scrollWidth,\n            clientWidth = _this$tabsRef.clientWidth;\n        var scrollLeft = getNormalizedScrollLeft(_this.tabsRef, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        var showLeftScroll = theme.direction === 'rtl' ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        var showRightScroll = theme.direction !== 'rtl' ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n\n        if (showLeftScroll !== _this.state.showLeftScroll || showRightScroll !== _this.state.showRightScroll) {\n          _this.setState({\n            showLeftScroll: showLeftScroll,\n            showRightScroll: showRightScroll\n          });\n        }\n      }\n    };\n\n    if (typeof window !== 'undefined') {\n      _this.handleResize = debounce(function () {\n        _this.updateIndicatorState(_this.props);\n\n        _this.updateScrollButtonState();\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n\n      _this.handleTabsScroll = debounce(function () {\n        _this.updateScrollButtonState();\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n    }\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        mounted: true\n      });\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.props.action) {\n        this.props.action({\n          updateIndicator: this.handleResize\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // The index might have changed at the same time.\n      // We need to check again the right indicator position.\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.state.indicatorStyle !== prevState.indicatorStyle) {\n        this.scrollSelectedIntoView();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleResize.clear();\n      this.handleTabsScroll.clear();\n    }\n  }, {\n    key: \"updateIndicatorState\",\n    value: function updateIndicatorState(props) {\n      var theme = props.theme,\n          value = props.value;\n\n      var _this$getTabsMeta2 = this.getTabsMeta(value, theme.direction),\n          tabsMeta = _this$getTabsMeta2.tabsMeta,\n          tabMeta = _this$getTabsMeta2.tabMeta;\n\n      var left = 0;\n\n      if (tabMeta && tabsMeta) {\n        var correction = theme.direction === 'rtl' ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        left = Math.round(tabMeta.left - tabsMeta.left + correction);\n      }\n\n      var indicatorStyle = {\n        left: left,\n        // May be wrong until the font is loaded.\n        width: tabMeta ? Math.round(tabMeta.width) : 0\n      };\n\n      if ((indicatorStyle.left !== this.state.indicatorStyle.left || indicatorStyle.width !== this.state.indicatorStyle.width) && !isNaN(indicatorStyle.left) && !isNaN(indicatorStyle.width)) {\n        this.setState({\n          indicatorStyle: indicatorStyle\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          action = _this$props4.action,\n          centered = _this$props4.centered,\n          childrenProp = _this$props4.children,\n          classes = _this$props4.classes,\n          classNameProp = _this$props4.className,\n          Component = _this$props4.component,\n          indicatorColor = _this$props4.indicatorColor,\n          innerRef = _this$props4.innerRef,\n          onChange = _this$props4.onChange,\n          ScrollButtonComponent = _this$props4.ScrollButtonComponent,\n          scrollButtons = _this$props4.scrollButtons,\n          _this$props4$TabIndic = _this$props4.TabIndicatorProps,\n          TabIndicatorProps = _this$props4$TabIndic === void 0 ? {} : _this$props4$TabIndic,\n          textColor = _this$props4.textColor,\n          theme = _this$props4.theme,\n          value = _this$props4.value,\n          variant = _this$props4.variant,\n          other = _objectWithoutProperties(_this$props4, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"innerRef\", \"onChange\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"theme\", \"value\", \"variant\"]);\n\n      var scrollable = variant === 'scrollable';\n      process.env.NODE_ENV !== \"production\" ? warning(!centered || !scrollable, 'Material-UI: you can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.') : void 0;\n      var className = clsx(classes.root, classNameProp);\n      var flexContainerClassName = clsx(classes.flexContainer, centered && !scrollable && classes.centered);\n      var scrollerClassName = clsx(classes.scroller, !scrollable && classes.fixed, scrollable && classes.scrollable);\n      var indicator = React.createElement(TabIndicator, _extends({\n        className: classes.indicator,\n        color: indicatorColor\n      }, TabIndicatorProps, {\n        style: _extends({}, this.state.indicatorStyle, TabIndicatorProps.style)\n      }));\n      this.valueToIndex = new Map();\n      var childIndex = 0;\n      var children = React.Children.map(childrenProp, function (child) {\n        if (!React.isValidElement(child)) {\n          return null;\n        }\n\n        process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n        var childValue = child.props.value === undefined ? childIndex : child.props.value;\n\n        _this2.valueToIndex.set(childValue, childIndex);\n\n        var selected = childValue === value;\n        childIndex += 1;\n        return React.cloneElement(child, {\n          fullWidth: variant === 'fullWidth',\n          indicator: selected && !_this2.state.mounted && indicator,\n          selected: selected,\n          onChange: onChange,\n          textColor: textColor,\n          value: childValue\n        });\n      });\n      var conditionalElements = this.getConditionalElements();\n      return React.createElement(Component, _extends({\n        className: className,\n        ref: innerRef\n      }, other), React.createElement(EventListener, {\n        target: \"window\",\n        onResize: this.handleResize\n      }), conditionalElements.scrollbarSizeListener, React.createElement(\"div\", {\n        className: classes.flexContainer\n      }, conditionalElements.scrollButtonLeft, React.createElement(\"div\", {\n        className: scrollerClassName,\n        style: this.state.scrollerStyle,\n        ref: this.handleTabsRef,\n        role: \"tablist\",\n        onScroll: this.handleTabsScroll\n      }, React.createElement(\"div\", {\n        className: flexContainerClassName\n      }, children), this.state.mounted && indicator), conditionalElements.scrollButtonRight));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `updateIndicator()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: PropTypes.func,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: PropTypes.oneOf(['secondary', 'primary']),\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `desktop` will only present them on medium and larger viewports.\n   * - `on` will always present them.\n   * - `off` will never present them.\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'on', 'off']),\n\n  /**\n   * Properties applied to the `TabIndicator` element.\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   *  Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: PropTypes.oneOf(['standard', 'scrollable', 'fullWidth'])\n} : void 0;\nTabs.defaultProps = {\n  centered: false,\n  component: 'div',\n  indicatorColor: 'secondary',\n  ScrollButtonComponent: TabScrollButton,\n  scrollButtons: 'auto',\n  textColor: 'inherit',\n  variant: 'standard'\n};\nexport default withStyles(styles, {\n  name: 'MuiTabs',\n  withTheme: true\n})(withForwardedRef(Tabs));"]},"metadata":{},"sourceType":"module"}