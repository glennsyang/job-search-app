{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '../styles';\nimport { exactProp } from '@material-ui/utils';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    '@global': {\n      html: {\n        WebkitFontSmoothing: 'antialiased',\n        // Antialiasing.\n        MozOsxFontSmoothing: 'grayscale',\n        // Antialiasing.\n        // Change from `box-sizing: content-box` so that `width`\n        // is not affected by `padding` or `border`.\n        boxSizing: 'border-box'\n      },\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightMedium\n      },\n      body: _extends({\n        margin: 0,\n        // Remove the margin in all browsers.\n        color: theme.palette.text.primary\n      }, theme.typography.body2, {\n        backgroundColor: theme.palette.background.default,\n        '@media print': {\n          // Save printer ink.\n          backgroundColor: theme.palette.common.white\n        }\n      })\n    }\n  };\n}, {\n  name: 'MuiCssBaseline'\n});\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children;\n  useStyles();\n  return React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default CssBaseline;","map":{"version":3,"sources":["/Users/glennsheppard/Development/React/jobs/client/node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js"],"names":["_extends","React","PropTypes","makeStyles","exactProp","useStyles","theme","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","fontWeight","typography","fontWeightMedium","body","margin","color","palette","text","primary","body2","backgroundColor","background","default","common","white","name","CssBaseline","props","_props$children","children","createElement","Fragment","process","env","NODE_ENV","propTypes","node"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,IAAIC,SAAS,GAAGF,UAAU,CAAC,UAAUG,KAAV,EAAiB;AAC1C,SAAO;AACL,eAAW;AACTC,MAAAA,IAAI,EAAE;AACJC,QAAAA,mBAAmB,EAAE,aADjB;AAEJ;AACAC,QAAAA,mBAAmB,EAAE,WAHjB;AAIJ;AACA;AACA;AACAC,QAAAA,SAAS,EAAE;AAPP,OADG;AAUT,gCAA0B;AACxBA,QAAAA,SAAS,EAAE;AADa,OAVjB;AAaT,mBAAa;AACXC,QAAAA,UAAU,EAAEL,KAAK,CAACM,UAAN,CAAiBC;AADlB,OAbJ;AAgBTC,MAAAA,IAAI,EAAEd,QAAQ,CAAC;AACbe,QAAAA,MAAM,EAAE,CADK;AAEb;AACAC,QAAAA,KAAK,EAAEV,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmBC;AAHb,OAAD,EAIXb,KAAK,CAACM,UAAN,CAAiBQ,KAJN,EAIa;AACzBC,QAAAA,eAAe,EAAEf,KAAK,CAACW,OAAN,CAAcK,UAAd,CAAyBC,OADjB;AAEzB,wBAAgB;AACd;AACAF,UAAAA,eAAe,EAAEf,KAAK,CAACW,OAAN,CAAcO,MAAd,CAAqBC;AAFxB;AAFS,OAJb;AAhBL;AADN,GAAP;AA8BD,CA/ByB,EA+BvB;AACDC,EAAAA,IAAI,EAAE;AADL,CA/BuB,CAA1B;AAkCA;;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,eAAe,GAAGD,KAAK,CAACE,QAA5B;AAAA,MACIA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,IAA7B,GAAoCA,eADnD;AAEAxB,EAAAA,SAAS;AACT,SAAOJ,KAAK,CAAC8B,aAAN,CAAoB9B,KAAK,CAAC+B,QAA1B,EAAoC,IAApC,EAA0CF,QAA1C,CAAP;AACD;;AAEDG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCR,WAAW,CAACS,SAAZ,GAAwB;AAC9D;;;AAGAN,EAAAA,QAAQ,EAAE5B,SAAS,CAACmC;AAJ0C,CAAhE,GAKI,KAAK,CALT;;AAOA,IAAIJ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAR,EAAAA,WAAW,CAAC,cAAc,EAAf,CAAX,GAAgCvB,SAAS,CAACuB,WAAW,CAACS,SAAb,CAAzC;AACD;;AAED,eAAeT,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '../styles';\nimport { exactProp } from '@material-ui/utils';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    '@global': {\n      html: {\n        WebkitFontSmoothing: 'antialiased',\n        // Antialiasing.\n        MozOsxFontSmoothing: 'grayscale',\n        // Antialiasing.\n        // Change from `box-sizing: content-box` so that `width`\n        // is not affected by `padding` or `border`.\n        boxSizing: 'border-box'\n      },\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightMedium\n      },\n      body: _extends({\n        margin: 0,\n        // Remove the margin in all browsers.\n        color: theme.palette.text.primary\n      }, theme.typography.body2, {\n        backgroundColor: theme.palette.background.default,\n        '@media print': {\n          // Save printer ink.\n          backgroundColor: theme.palette.common.white\n        }\n      })\n    }\n  };\n}, {\n  name: 'MuiCssBaseline'\n});\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children;\n  useStyles();\n  return React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default CssBaseline;"]},"metadata":{},"sourceType":"module"}