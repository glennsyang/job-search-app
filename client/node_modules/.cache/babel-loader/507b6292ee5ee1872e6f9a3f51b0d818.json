{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'absolute',\n      height: 2,\n      bottom: 0,\n      width: '100%',\n      transition: theme.transitions.create()\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar TabIndicator = React.forwardRef(function TabIndicator(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      color = props.color,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\"]);\n\n  return React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabIndicator.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * The color of the tab indicator.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabIndicator'\n})(TabIndicator);","map":{"version":3,"sources":["/Users/glennsheppard/Development/React/jobs/client/node_modules/@material-ui/core/esm/Tabs/TabIndicator.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","position","height","bottom","width","transition","transitions","create","colorPrimary","backgroundColor","palette","primary","main","colorSecondary","secondary","TabIndicator","forwardRef","props","ref","classes","className","color","other","createElement","concat","process","env","NODE_ENV","propTypes","object","isRequired","string","oneOf","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,UADN;AAEJC,MAAAA,MAAM,EAAE,CAFJ;AAGJC,MAAAA,MAAM,EAAE,CAHJ;AAIJC,MAAAA,KAAK,EAAE,MAJH;AAKJC,MAAAA,UAAU,EAAEN,KAAK,CAACO,WAAN,CAAkBC,MAAlB;AALR,KAFD;;AAUL;AACAC,IAAAA,YAAY,EAAE;AACZC,MAAAA,eAAe,EAAEV,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBC;AAD3B,KAXT;;AAeL;AACAC,IAAAA,cAAc,EAAE;AACdJ,MAAAA,eAAe,EAAEV,KAAK,CAACW,OAAN,CAAcI,SAAd,CAAwBF;AAD3B;AAhBX,GAAP;AAoBD,CArBM;AAsBP;;;;AAIA,IAAIG,YAAY,GAAGtB,KAAK,CAACuB,UAAN,CAAiB,SAASD,YAAT,CAAsBE,KAAtB,EAA6BC,GAA7B,EAAkC;AACpE,MAAIC,OAAO,GAAGF,KAAK,CAACE,OAApB;AAAA,MACIC,SAAS,GAAGH,KAAK,CAACG,SADtB;AAAA,MAEIC,KAAK,GAAGJ,KAAK,CAACI,KAFlB;AAAA,MAGIC,KAAK,GAAG9B,wBAAwB,CAACyB,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,CAAR,CAHpC;;AAKA,SAAOxB,KAAK,CAAC8B,aAAN,CAAoB,MAApB,EAA4BhC,QAAQ,CAAC;AAC1C6B,IAAAA,SAAS,EAAEzB,IAAI,CAACwB,OAAO,CAACnB,IAAT,EAAemB,OAAO,CAAC,QAAQK,MAAR,CAAe3B,UAAU,CAACwB,KAAD,CAAzB,CAAD,CAAtB,EAA2DD,SAA3D,CAD2B;AAE1CF,IAAAA,GAAG,EAAEA;AAFqC,GAAD,EAGxCI,KAHwC,CAApC,CAAP;AAID,CAVkB,CAAnB;AAWAG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,YAAY,CAACa,SAAb,GAAyB;AAC/D;;;;AAIAT,EAAAA,OAAO,EAAEzB,SAAS,CAACmC,MAAV,CAAiBC,UALqC;;AAO/D;;;AAGAV,EAAAA,SAAS,EAAE1B,SAAS,CAACqC,MAV0C;;AAY/D;;;;AAIAV,EAAAA,KAAK,EAAE3B,SAAS,CAACsC,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,CAAhB;AAhBwD,CAAjE,GAiBI,KAAK,CAjBT;AAkBA,eAAepC,UAAU,CAACE,MAAD,EAAS;AAChCmC,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZlB,YAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'absolute',\n      height: 2,\n      bottom: 0,\n      width: '100%',\n      transition: theme.transitions.create()\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar TabIndicator = React.forwardRef(function TabIndicator(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      color = props.color,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\"]);\n\n  return React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabIndicator.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * The color of the tab indicator.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabIndicator'\n})(TabIndicator);"]},"metadata":{},"sourceType":"module"}